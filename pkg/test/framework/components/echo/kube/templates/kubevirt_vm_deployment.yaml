{{- $revVerMap := .Revisions }}
{{- $subsets := .Subsets }}
{{- $cluster := .Cluster }}
{{- range $i, $subset := $subsets }}
{{- range $revision, $version := $revVerMap }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: virtspec-{{ $.Service }}
data:
  virtSpec: |
    running: true
    template:
      metadata:
        labels:
          app: {{ $.Service }}
          version: {{ $subset.Version }}
          test.istio.io/class: {{ $.WorkloadClass }}
{{- if $.Compatibility }}
          istio.io/rev: {{ $revision }}
{{- end }}
{{- if ne $.Locality "" }}
          istio-locality: {{ $.Locality }}
{{- end }}
{{- if $.ProxylessGRPC }}
          test.istio.io/class: proxyless
{{- end }}
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "15014"
{{- if and
  (ne ($subset.Annotations.GetByName "sidecar.istio.io/inject") "false")
  (ne ($subset.Annotations.GetByName "inject.istio.io/templates") "grpc")
  ($.OverlayIstioProxy)
}}
          sidecar.istio.io/inject: "true"
{{- else }}
          sidecar.istio.io/inject: "false"
{{- end }}
{{- if $.ProxylessGRPC }}
          inject.istio.io/templates: "grpc-agent"
{{- end }}
{{- if eq $.Service "tproxy" }}
          sidecar.istio.io/interceptionMode: "TPROXY"
{{- end }}
      spec:
        terminationGracePeriodSeconds: 0
        domain:
          devices:
            disks:
            - disk:
                bus: virtio
              name: bootdiskkubevm
            - disk:
                bus: virtio
              name: cloudinitdisk
{{- if $.ServiceAccount }}
            - disk:
                bus: virtio
              name: sadisk
{{- end }}
{{- if $.TLSSettings }}{{if not $.TLSSettings.ProxyProvision }}
            - disk: {}
              name: custom-certs
              serial: CVLY623300HK241D
{{- end }}{{- end }}
            - disk: {}
              name: secretdisk
              serial: CVLY623300HK240D
        volumes:
        - name: bootdiskkubevm
          containerDisk:
            image: gcr.io/asm-staging-images/test/kubevirtvm_fedora36_app:latest
  {{- if ne $.ImagePullSecretName "" }}
            imagePullSecret: {{ $.ImagePullSecretName }}
  {{- end }}
            imagePullPolicy: IfNotPresent
        - cloudInitNoCloud:
            userData: |
              #cloud-config
              user: fedora
              password: fedora
              chpasswd: { expire: False }
              write_files:
              - path: /etc/rc.local
                content: |
                  #!/bin/bash
                  curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-392.0.0-linux-x86_64.tar.gz
                  tar -xf google-cloud-cli-392.0.0-linux-x86_64.tar.gz
                  jq '[.auths."https://gcr.io".password] | to_entries[].value | fromjson' /mnt/secret/.dockerconfigjson > service-account.json
                  ./google-cloud-sdk/bin/gcloud auth activate-service-account --key-file=service-account.json
                  ./google-cloud-sdk/bin/gsutil cp gs://{{ $.GCSFolder }}/server /usr/local/bin
                  ./google-cloud-sdk/bin/gsutil cp gs://{{ $.GCSFolder }}/client /usr/local/bin
                  ./google-cloud-sdk/bin/gsutil cp gs://{{ $.GCSFolder }}/cert.crt /cert.crt
                  ./google-cloud-sdk/bin/gsutil cp gs://{{ $.GCSFolder }}/cert.key /cert.key
                  chmod +x /usr/local/bin/server
                  /usr/local/bin/server --metrics=15014 --cluster {{ $cluster }} \
  {{- range $i, $p := $.ContainerPorts }}
      {{- if and $p.XDSServer (eq .Protocol "GRPC") }}
                  --xds-grpc-server={{ $p.Port }} \
      {{- else if eq .Protocol "GRPC" }}
                  --grpc {{ $p.Port }} \
      {{- else if eq .Protocol "TCP" }}
                  --tcp {{ $p.Port }} \
      {{- else }}
                  --port {{ $p.Port }} \
      {{- end }}
      {{- if $p.TLS }}
                  --tls={{ $p.Port }} \
      {{- end }}
      {{- if $p.ServerFirst }}
                  --server-first={{ $p.Port }} \
      {{- end }}
  {{- end }}
                  --version v1 --istio-version "" \
                  --crt=/cert.crt --key=/cert.key &
              bootcmd:
                - "mkdir -p /mnt/secret"
                - "mount /dev/$(lsblk --nodeps -no name,serial | grep CVLY623300HK240D | cut -f1 -d' ') /mnt/secret"
                - "yum install jq -y"
{{- if $.TLSSettings }}{{if not $.TLSSettings.ProxyProvision }}
                - "mkdir -p /etc/certs/custom"
                - "mount /dev/$(lsblk --nodeps -no name,serial | grep CVLY623300HK241D | cut -f1 -d' ') /etc/certs/custom"
{{- end }}{{- end }}
              runcmd:
{{- if $.ProxylessGRPC }}
                - "EXPOSE_GRPC_ADMIN=true"
{{- end }}
                - [chmod, +x, /etc/rc.local]
                - [systemctl, enable, rc-local]
                - [/usr/bin/bash, /etc/rc.local]
          name: cloudinitdisk
  {{- if $.ServiceAccount }}
        - name: sadisk
          serviceAccount:
            serviceAccountName: {{ $.Service }}
  {{- end }}
{{- if $.TLSSettings }}{{if not $.TLSSettings.ProxyProvision }}
        - name: custom-certs
          configMap:
            name: {{ $.Service }}-certs
{{- end }}{{- end }}
        - name: secretdisk
          secret:
            secretName: {{ $.ImagePullSecretName }}

---
apiVersion: vm.cluster.gke.io/v1
kind: VirtualMachine
metadata:
{{- if $.Compatibility }}
  name: {{ $.Service }}-{{ $subset.Version }}-{{ $revision }}
{{- else }}
  name: {{ $.Service }}-{{ $subset.Version }}
{{- end }}
  annotations:
    vm.cluster.gke.io/virt-spec-configmap: virtspec-{{ $.Service }}
spec:
  osType: Linux
  guestEnvironment: {}
  interfaces:
  - name: eth0
    networkName: pod-network
    default: true
  compute:
    cpu:
      vcpus: 2
    memory:
      capacity: 2G
---
{{- end }}
{{- end }}

{{- if $.TLSSettings }}{{if not $.TLSSettings.ProxyProvision }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Service }}-certs
data:
  root-cert.pem: |
{{ $.TLSSettings.RootCert | indent 4 }}
  cert-chain.pem: |
{{ $.TLSSettings.ClientCert | indent 4 }}
  key.pem: |
{{ $.TLSSettings.Key | indent 4}}
---
{{- end}}{{- end}}

