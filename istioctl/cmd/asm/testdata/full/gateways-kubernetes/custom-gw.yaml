# Resources for IngressGateways component

apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: custom-gw
  namespace: custom
  labels:
    app: istio-ingressgateway
    istio: custom
    release: istio
    istio.io/rev: asm-managed-rapid
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: "IngressGateways"
spec:
  maxReplicas: 5
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: custom-gw
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80
---


apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: istio-ingressgateway
    install.operator.istio.io/owning-resource: unknown
    istio: custom
    istio.io/rev: asm-managed-rapid
    operator.istio.io/component: IngressGateways
    release: istio
  name: custom-gw
  namespace: custom
spec:
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: custom
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        inject.istio.io/templates: gateway
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "true"
      labels:
        app: istio-ingressgateway
        install.operator.istio.io/owning-resource: unknown
        istio: custom
        istio.io/rev: asm-managed-rapid
        operator.istio.io/component: IngressGateways
        sidecar.istio.io/inject: "true"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
            weight: 2
          - preference:
              matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - ppc64le
            weight: 2
          - preference:
              matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - s390x
            weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
      containers:
      - env:
        - name: ISTIO_META_UNPRIVILEGED_POD
          value: "true"
        image: auto
        name: istio-proxy
        ports:
        - containerPort: 6378
          protocol: TCP
        - containerPort: 15090
          name: http-envoy-prom
          protocol: TCP
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/istio/ingressgateway-certs
          name: ingressgateway-certs
          readOnly: true
        - mountPath: /etc/istio/ingressgateway-ca-certs
          name: ingressgateway-ca-certs
          readOnly: true
      nodeSelector:
        cloud.google.com/gke-nodepool: gateway
      securityContext:
        fsGroup: 1337
        runAsGroup: 1337
        runAsNonRoot: true
        runAsUser: 1337
      serviceAccountName: custom-gw-service-account
      tolerations:
      - key: dedicated
        operator: Equal
        value: gateway
      volumes:
      - name: ingressgateway-certs
        secret:
          optional: true
          secretName: istio-ingressgateway-certs
      - name: ingressgateway-ca-certs
        secret:
          optional: true
          secretName: istio-ingressgateway-ca-certs

---


apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: custom-gw
  namespace: custom
  labels:
    app: istio-ingressgateway
    istio: custom
    release: istio
    istio.io/rev: asm-managed-rapid
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: "IngressGateways"
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: istio-ingressgateway
      istio: custom
---


apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: custom-gw-sds
  namespace: custom
  labels:
    release: istio
    istio.io/rev: asm-managed-rapid
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: "IngressGateways"
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "watch", "list"]
---


apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: custom-gw-sds
  namespace: custom
  labels:
    release: istio
    istio.io/rev: asm-managed-rapid
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: "IngressGateways"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: custom-gw-sds
subjects:
- kind: ServiceAccount
  name: custom-gw-service-account
---


apiVersion: v1
kind: Service
metadata:
  labels:
    app: istio-ingressgateway
    install.operator.istio.io/owning-resource: unknown
    istio: custom
    istio.io/rev: asm-managed-rapid
    operator.istio.io/component: IngressGateways
    release: istio
  name: custom-gw
  namespace: custom
spec:
  ports:
  - name: redis-tls
    port: 6378
    protocol: TCP
    targetPort: 6378
  selector:
    app: istio-ingressgateway
    istio: custom
  type: LoadBalancer

---


apiVersion: v1
kind: ServiceAccount
metadata:
  name: custom-gw-service-account
  namespace: custom
  labels:
    app: istio-ingressgateway
    istio: custom
    release: istio
    istio.io/rev: asm-managed-rapid
    install.operator.istio.io/owning-resource: unknown
    operator.istio.io/component: "IngressGateways"
---
