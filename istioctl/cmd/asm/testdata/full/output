Generating equivalent configuration for Anthos Service Mesh managed control plane...

Migrating MeshConfig settings...
✔ Wrote MeshConfig to output-path/meshconfig.yaml.

Migrating gateway deployments...
✔ Wrote Gateway to output-path/gateways-istiooperator/custom-gw.yaml
✔ Wrote Gateway to output-path/gateways-kubernetes/custom-gw.yaml
✔ Wrote Gateway to output-path/gateways-istiooperator/custom-gw-2.yaml
✔ Wrote Gateway to output-path/gateways-kubernetes/custom-gw-2.yaml
✔ Wrote Gateway to output-path/gateways-istiooperator/istio-ingressgateway.yaml
✔ Wrote Gateway to output-path/gateways-kubernetes/istio-ingressgateway.yaml
✔ Wrote Gateway to output-path/gateways-istiooperator/istio-egressgateway.yaml
✔ Wrote Gateway to output-path/gateways-kubernetes/istio-egressgateway.yaml

Checking configuration compatibility...
! Found unsupported configurations:
    MeshConfig.trustDomain=custom: not configurable in managed control plane; this option will be ignored
    MeshConfig.defaultConfig.proxyMetadata.OUTPUT_CERTS=/etc/istio/proxy: not configurable in managed control plane; this option will be ignored
    MeshConfig.defaultConfig.proxyMetadata.XDS_ROOT_CA=/etc/ssl/certs/ca-certificates.crt: not configurable in managed control plane; this option will be ignored
    MeshConfig.defaultConfig.proxyMetadata.CA_ROOT_CA=/etc/ssl/certs/ca-certificates.crt: not configurable in managed control plane; this option will be ignored
    MeshConfig.defaultConfig.proxyMetadata.XDS_AUTH_PROVIDER=gcp: not configurable in managed control plane; this option will be ignored
    MeshConfig.defaultConfig.proxyMetadata.PROXY_CONFIG_XDS_AGENT=true: not configurable in managed control plane; this option will be ignored
    MeshConfig.defaultConfig.meshId=custom: not configurable in managed control plane; this option will be ignored
    MeshConfig.defaultConfig.discoveryAddress=my-address:1234: not configurable in managed control plane; this option will be ignored
    MeshConfig.defaultConfig.configPath=why-would-you-set-this: is not supported in managed control plane and may not work
    Values.cni: CNI is supported, but customizing the CNI installation is not
    Values.global.istioNamespace=bar: not configurable in managed control plane
    Hub=h2: not configurable in managed control plane
    Values.global.hub=h1: not configurable in managed control plane
    Tag=t2: not configurable in managed control plane
    Values.global.tag=t1: not configurable in managed control plane
    Revision=rev: not configurable in managed control plane
    Values.revision=rev2: not configurable in managed control plane
! Found configurations that may require migration:
    Components.Cni: install with `--option cni-managed` option to enable CNI
    Values.istio_cni: install with `--option cni-managed` option to enable CNI

Actions required to migrate:
! Found potentially unsupported configurations; review warnings above before proceeding
- Found custom mesh configuration settings. To apply these settings to ASM managed control plane, run: `kubectl apply -f 'output-path/meshconfig.yaml'`
- Found 4 gateway deployments. There are two options available to deploy these to ASM managed control plane. Both options will provide the same end result:

(1) Simple Kubernetes Configuration (recommended)

This option contains all of the standard Kubernetes configution, such as Deployment and Services, to deploy a gateway.
If you want to modify the configuration in the future, you can modify these configurations directly.
To deploy these to the cluster, run `kubectl apply -f 'output-path/gateways-kubernetes'` after installing ASM managed control plane.

(2) Continue to use IstioOperator

If you would prefer to continue to use the same IstioOperator API, you may continue to do so.
The 'output-path/gateways-istiooperator' directory contains an IstioOperator per configured gateway. These have been modified to be compatible with ASM managed control plane.
To deploy these to the cluster, run, for each gateway, one of the following commands:
- `istioctl install -f 'output-path/gateways-istiooperator/GATEWAY_NAME.yaml'`
- `istioctl manifest generate -f 'output-path/gateways-istiooperator/GATEWAY_NAME.yaml' | kubectl apply -f -`

TIP: steps recommending `kubectl apply` to be run should be integrated into your CI/CD pipeline, if applicable.
